package com.manthan.empwebapp.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import com.manthan.empwebapp.beans.EmployeeInfoBeans;

public class EmployeeDAOImpl implements EmployeeDAO {

	@Override
	public EmployeeInfoBeans searchEmployee(int empId) {

		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

		EmployeeInfoBeans employeeInfoBeans =new EmployeeInfoBeans();

		try {
			//LOAD THE DRIVER
			Class.forName("com.mysql.jdbc.Driver");

			//GET CONNECTION VIA DRIVER
			con = DriverManager.getConnection("jdbc:mysql:rdsmysqll.crrozh7yptoi.us-east-2.rds.amazonaws.com//elf_employee_db", "root", "rootroot");

			//ISSUE SQL QUERY 
			String query = " select * from employee_info where emp_id=?";
			pstmt = con.prepareStatement(query);
			pstmt.setInt(1, empId);

			rs = pstmt.executeQuery();

			if(rs.next()) {

				employeeInfoBeans.setEmpId(rs.getInt("emp_id"));
				employeeInfoBeans.setEmpName(rs.getString("emp_name"));
				employeeInfoBeans.setEmpAge(rs.getInt("age"));
				employeeInfoBeans.setEmpDesignation(rs.getString("designation"));
				employeeInfoBeans.setEmpMobile(rs.getLong("mobile"));
				employeeInfoBeans.setEmpSalary(rs.getDouble("salary"));
			}
		} catch (Exception e) {
		}
		finally {
			//CLOSE JDBC OBJECTS
			if (rs != null) {
				try {
					rs.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if (pstmt != null) {
				try {
					pstmt.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if (con != null) {
				try {
					con.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}//end of finally
		return employeeInfoBeans;
	}//end of searchEmployee

	@Override
	public boolean addEmployee(EmployeeInfoBeans employeeInfoBeans) {
		Connection conn=null;
		PreparedStatement pstmt=null;
		boolean isAdded=false;
		try {

			Class.forName("com.mysql.jdbc.Driver");

			String dburl="jdbc:mysql://http://empwebapp-env.pkkmhbanij.us-east-2.elasticbeanstalk.com//elf_employee_db";
			conn=DriverManager.getConnection(dburl,"root","rootroot");

			pstmt=conn.prepareStatement("insert into employee_info values (?,?,?,?,?,?,?)");

			pstmt.setInt(1,employeeInfoBeans.getEmpId());
			pstmt.setString(2, employeeInfoBeans.getEmpName());
			pstmt.setInt(3,employeeInfoBeans.getEmpAge());
			pstmt.setDouble(4,employeeInfoBeans.getEmpSalary());
			pstmt.setString(5,employeeInfoBeans.getEmpDesignation());
			pstmt.setLong(6,employeeInfoBeans.getEmpMobile());
			pstmt.setString(7,employeeInfoBeans.getEmpPassword());

			int n=pstmt.executeUpdate();

			if(n>0) {
				isAdded=true;
			}


		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			if(pstmt!=null) {
				try {
					pstmt.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn!=null){
				try {
					conn.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}
		return isAdded;
	}

	@Override
	public EmployeeInfoBeans authenticateEmployee(int empId, String empPassword) {
		Connection con=null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

		EmployeeInfoBeans employeeInfoBeans=null;

		try {
			//LOAD THE DRIVER
			Class.forName("com.mysql.jdbc.Driver");

			//GET CONNECTION VIA DRIVER
			con = DriverManager.getConnection("jdbc:mysql://http://empwebapp-env.pkkmhbanij.us-east-2.elasticbeanstalk.com/", "root", "rootroot");

			//ISSUE SQL QUERY 
			String query = " select * from employee_info where emp_id=? and password=?";
			pstmt = con.prepareStatement(query);
			pstmt.setInt(1, empId);
			pstmt.setString(2, empPassword);

			rs = pstmt.executeQuery();

			if(rs.next()) {
				employeeInfoBeans=new EmployeeInfoBeans(); //creating object of EmployeeInfoBeans
				employeeInfoBeans.setEmpId(rs.getInt("emp_id"));
				employeeInfoBeans.setEmpName(rs.getString("emp_name"));
				employeeInfoBeans.setEmpAge(rs.getInt("age"));
				employeeInfoBeans.setEmpDesignation(rs.getString("designation"));
				employeeInfoBeans.setEmpMobile(rs.getLong("mobile"));
				employeeInfoBeans.setEmpSalary(rs.getDouble("salary"));
				employeeInfoBeans.setEmpPassword(rs.getString("empPassword"));
			}
		} catch (Exception e) {
		}
		finally {
			//CLOSE JDBC OBJECTS
			if (rs != null) {
				try {
					rs.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if (pstmt != null) {
				try {
					pstmt.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if (con != null) {
				try {
					con.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}//end of finally
		return employeeInfoBeans;
	}//end of authenticateEmployee

	public boolean updateEmployee(int empId,Long empMobile) {
		Connection conn=null;
		PreparedStatement pstmt=null;
		boolean isUpdated=false;

		try {

			Class.forName("com.mysql.jdbc.Driver");

			String dburl="jdbc:mysql://http://empwebapp-env.pkkmhbanij.us-east-2.elasticbeanstalk.com//elf_employee_db";
			conn=DriverManager.getConnection(dburl,"root","rootroot");

			pstmt=conn.prepareStatement("update employee_info set mobile=? where emp_id=?;");
			pstmt.setLong(1,empMobile);
			pstmt.setInt(2, empId);


			int n=pstmt.executeUpdate();
			if(n > 0) {
				isUpdated=true;
			}


		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			if(pstmt!=null) {
				try {
					pstmt.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn!=null){
				try {
					conn.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}




		return isUpdated;

	}//end of updateEmployee()


	public boolean deleteEmployee(int empId) {
		Connection conn=null;
		PreparedStatement pstmt=null;
		boolean isDeleted=false;
		
		try {
			Class.forName("com.mysql.jdbc.Driver");

			String dburl="jdbc:mysql://http://empwebapp-env.pkkmhbanij.us-east-2.elasticbeanstalk.com//elf_employee_db";
			conn=DriverManager.getConnection(dburl,"root","rootroot");

			pstmt=conn.prepareStatement("delete from employee_info where emp_id=?");
			pstmt.setInt(1,empId);
			

			int n=pstmt.executeUpdate();
			if(n>0) {
				isDeleted=true;
			}

		} catch (Exception e ) {
			System.out.println(e.getMessage());
		}

		finally {
			if(pstmt!=null) {
				try {
					pstmt.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn!=null){
				try {
					conn.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}

		}// end of finally
		return isDeleted;
	}

	@Override
	public ArrayList<EmployeeInfoBeans> seeAllEmployee() {
		Connection conn=null;
		Statement stmt=null;
		 ResultSet rs=null;
		try {
			Class.forName("com.mysql.jdbc.Driver");

			String dburl="jdbc:mysql://http://empwebapp-env.pkkmhbanij.us-east-2.elasticbeanstalk.com//elf_employee_db";
			conn=DriverManager.getConnection(dburl,"root","rootroot");

			stmt = conn.createStatement();
			
			rs=stmt.executeQuery("select * from employee_info");
			ArrayList<EmployeeInfoBeans> empList=null;
			while(rs.next()) {
				
				EmployeeInfoBeans empAll = new EmployeeInfoBeans();
				
				
		        empList.add(empAll);
			}
			
			
		}catch(Exception e) {
			
		}
		return null;
	}

	
}//end of class
